title: Keeping easy things easy
date: "2014/08/19"
body: |

  There's a trend in front-end development to want to use the 'best practice' tools in every project, no matter the size or complexity. I think this is in large part a way of signalling (to ourselves as much as others) competence through tribal membership: i.e I use cool tools so I must be good.

  But engineering is about trade-offs. There are times when a [raft](http://www.moock.org/blog/archives/000310.html) is the correct engineering solution, and a lovely cantilevered bridge is a criminal waste of time and resources. Just as with new development tools - Gulp, CSS transpilers, JS transpilers - the bridge is outwardly a more eye-catching sign of competence while being in reality the opposite.

  A fluency with weighing trade-offs is the definition of graduating from being an [advanced-beginner](http://en.wikipedia.org/wiki/Dreyfus_model_of_skill_acquisition):
  
  - limited situational perception
  - all aspects of work treated separately with equal importance

  We're being advanced-beginners when we don't weigh the attributes - scale, team-size, complexity - that make a project appropriate for a complex workflow. We should be careful not to treat 'best practice' tools as goals in themselves, when they should be valuable only as means to our project's goals. Expertise isn't just making hard things possible; it's keeping easy things easy.
