

  I see this a lot when Elixir's Ruby-ish syntax makes me write something like `a_map.put(:some_key,some_value)`, rather than `Map.put(a_map,:some_key,some_val)`.
    
     1) test can prune out a stack (StackTest)
        ** (ArgumentError) argument error
        stacktrace:
          :erlang.apply(%{}, :put, [])
          (skrun) lib/stack.ex:70: Stack.count_dependencies/5


  This is Elixir's version of "variable 'some_variable' undefined": because we can call a function with parenthesis, Elixir assumes any mistyped variable must be a 0-arg function call of the same name, looks for it, and fails.

    == Compilation error on file lib/stack.ex ==
  ** (CompileError) lib/stack.ex:70: function some_variable/0 undefined
      (stdlib) lists.erl:1336: :lists.foreach/2
      (stdlib) erl_eval.erl:657: :erl_eval.do_apply/6
      (elixir) src/elixir.erl:150: :elixir.eval_forms/4
